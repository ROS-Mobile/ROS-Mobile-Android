<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string-array name="widget_names">
        <item>Battery</item>
        <item>Button</item>
        <item>Camera</item>
        <item>Debug</item>
        <item>Gps</item>
        <item>Joystick</item>
        <item>Directional</item>
        <item>Logger</item>
        <item>RqtPlot</item>
        <item>Viz2D</item>
        <item>Test</item>
    </string-array>

    <string-array name="layer_names">
        <item>GridMap</item>
        <item>LaserScan</item>
        <item>Path</item>
        <item>Pose</item>
        <item>TouchGoal</item>
    </string-array>


    <!--___________________________Layers____________________________-->

    <!-- GridMap -->
    <string name="GridMap_description">
        Displays an occupancy grid on the ground plane from a nav_msgs::OccupancyGrid.
        The recommended maximum size of the grid map should not exceed 1,000,000 cells, otherwise
        performance issues may occur.
    </string>

    <!-- LaserScan -->
    <string name="LaserScan_description">
        Displays data from a sensor_msgs::LaserScan message as points.
    </string>

    <!-- Path -->
    <string name="Path_description">
        Displays data from a nav_msgs::Path message as lines.
    </string>


    <!-- Pose -->
    <string name="Pose_description">
        Displays a pose from a geometry_msgs::PoseStamped message.
    </string>


    <!-- TouchGoal -->
    <string name="TouchGoal_description">
        Adds the ability to publish a goal as a geometry_msgs::PoseStamped message.
        Double tap to set the position of the goal and drag to define the orientation.
    </string>

    <!--___________________________Widgets____________________________-->

    <!-- Battery -->
    <string name="Battery_description">
        The battery indicator displays charging activity and charge percentage.
    </string>

    <!-- Button -->
    <string name="Button_description">
        A Button Node which, when pressed, publishes on a topic chosen
        by the user "True" and when released "False".
    </string>

    <string-array name="button_rotation">
        <item>0째</item>
        <item>90째</item>
        <item>180째</item>
        <item>270째</item>
    </string-array>


    <!-- Camera -->
    <string name="Camera_description">
        The Camera Node is designed for displaying camera recordings. Therefore, it subscribes to
        the topic specified in the details and receives a sensor_msgs/Image message.
        It will then display the received Image in the Viz Tab.
    </string>



    <!-- Debug -->
    <string name="Debug_description">
        A Debug Node which can show all topics similar to rostopic info.
    </string>


    <!-- GPS -->
    <string name="Gps_description">The GPS node is designed for displaying the GPS position of the
        connected robot onto a map. Therefore, it subscribes to the topic specified in the details
        and receives a sensor_msgs/NavSatFix message. It will then display the received position
        onto the map visualized in the Viz Tab. The map will be thereby centered at the position.
        You can zoom in and out by pinching 2 or more fingers together or apart.
    </string>

    <!-- Joystick -->
    <string name="Joystick_description">
        The Joystick node is designed for teleoperational control of robotic systems.
        It will map the joystick position from the visualization tab to the topic
        specified in the details. The inherited message is thereby the geometry_msgs/Twist. In the
        details section of the joystick, you can specify to which variables of the Twist message
        the joystick position should be mapped. Further, the mapping dimensions can be set. To change
        the location of the joystick for control, simply touch the joystick button in the Viz Tab
        and push it around to the desired location. When thee button is released, it will
        automatically go back to center.
    </string>

    <string-array name="joystick_twist_dir">
        <item>Linear</item>
        <item>Angular</item>
    </string-array>

    <string-array name="joystick_twist_axis">
        <item>X</item>
        <item>Y</item>
        <item>Z</item>
    </string-array>


    <!-- Directional Key -->
    <string name="Directional_description">
        The Directional node is designed for teleoperational control of robotic systems. You can create
        a button which allows the robot to move or turn.
        It will communicate to the topic specified in the details. The inherited message is thereby
        the geometry_msgs/Twist. In the details section of the directional, you can specify the axis
        of the speed and the kind of speed (linear / angular).
    </string>

    <string-array name="directional_twist_dir">
        <item>Linear</item>
        <item>Angular</item>
    </string-array>

    <string-array name="directional_twist_axis">
        <item>X</item>
        <item>Y</item>
        <item>Z</item>
    </string-array>

    <string-array name="directional_twist_sense">
        <item>Positive</item>
        <item>Negative</item>
    </string-array>

    <!-- Label -->
    <string name="Label_description">
        A Label which does not interact with ROS but helps to organize your screen.
    </string>


    <!-- Logger -->
    <string name="Logger_description">
        A Logger message which simply prints String messages published to set topic.
    </string>

    <!-- RqtPlot -->
    <string name="RqtPlot_description">
        RqtPlot provides a GUI plugin visualizing numeric values in a 2D plot.
    </string>

    <!-- Viz2D -->
    <string name="Viz2D_description">
        2D View of multiple layers.
    </string>

</resources>